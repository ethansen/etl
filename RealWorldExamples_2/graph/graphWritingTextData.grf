<?xml version="1.0" encoding="UTF-8"?>
<Graph author="lucie" created="Mon Jul 26 05:37:30 CEST 2010" guiVersion="3.3.0.P" id="1280121426438" licenseType="Community" modified="Fri Dec 07 17:19:45 PST 2012" modifiedBy="erichansen" name="graphWritingTextData" revision="1.98" showComponentDetails="true">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="customers" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" recordSize="-1" type="delimited">
<Field eofAsDelimiter="false" name="customerid" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="firstname" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="lastname" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="address1" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="address2" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="city" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="state" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="zip" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="country" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="region" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="email" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="phone" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="creditcardtype" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="creditcard" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="creditcardexpiration" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="username" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="password" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="age" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="income" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="gender" nullable="true" shift="0" size="0" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="customers_short" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" recordSize="-1" type="delimited">
<Field name="customerid" type="integer"/>
<Field eofAsDelimiter="false" name="firstname" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="lastname" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="city" nullable="true" shift="0" size="0" type="string"/>
<Field name="state" type="string"/>
<Field eofAsDelimiter="false" name="country" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="username" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="password" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="age" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="income" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="gender" nullable="true" shift="0" size="0" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata2" previewAttachmentCharset="ISO-8859-1">
<Record name="xml_record" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field eofAsDelimiter="true" name="data" type="string"/>
</Record>
</Metadata>
<Property id="GraphParameter0" name="FULL_FILE" value="5555"/>
<Property fileURL="workspace.prm" id="GraphParameter1"/>
<Note alignment="1" backgroundColorB="0" backgroundColorG="196" backgroundColorR="255" folded="false" height="45" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="12" title="Gather all customers from the same state into separate files. " titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="12" width="829" x="27" y="8"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="103" id="Note1" textColorB="0" textColorG="0" textColorR="0" textFontSize="10" title="      " titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="301" x="275" y="377">
<attr name="text"><![CDATA[Note the difference how SimpleGather and Concatenate component, that puts data from various inputs together]]></attr>
</Note>
<Note alignment="1" backgroundColorB="0" backgroundColorG="196" backgroundColorR="255" folded="false" height="52" id="Note3" textColorB="0" textColorG="0" textColorR="0" textFontSize="10" title="Instead of two big files with customer data create smaller ones with the given number of records each. " titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="12" width="829" x="24" y="204"/>
<Note alignment="1" backgroundColorB="0" backgroundColorG="255" backgroundColorR="255" folded="false" height="125" id="Note4" textColorB="0" textColorG="0" textColorR="0" textFontSize="10" title="Windows users, overwrite                                      ." titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="449" x="25" y="626">
<attr name="text"><![CDATA[SYSTEM COMMAND
@dir data-out\others\customers*.xml /b

COMMAND INTERPRETER
cmd /C ${}]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" guiHeight="72" guiName="concatenates" guiWidth="128" guiX="192" guiY="491" id="CONCATENATE0" type="CONCATENATE"/>
<Node charset="utf-8" enabled="enabled" fileURL="${DATAIN_DIR}/delimited/customers_region1.csv" guiHeight="77" guiName="UTF-8" guiWidth="128" guiX="22" guiY="447" id="DATA_READER0" type="DATA_READER">
<attr name="guiDescription"><![CDATA[Read customers]]></attr>
</Node>
<Node charset="UTF-8" enabled="enabled" fileURL="${DATAIN_DIR}/delimited/customers_region2.csv" guiHeight="77" guiName="UTF-8" guiWidth="128" guiX="22" guiY="542" id="DATA_READER1" type="DATA_READER">
<attr name="guiDescription"><![CDATA[Read customers]]></attr>
</Node>
<Node charset="windows-1250" enabled="enabled" fileURL="${DATAIN_DIR}/delimited/customers_region1.csv" guiHeight="77" guiName="windows-1250" guiWidth="128" guiX="22" guiY="261" id="DATA_READER2" type="DATA_READER">
<attr name="guiDescription"><![CDATA[Read customers]]></attr>
</Node>
<Node charset="windows-1250" enabled="enabled" fileURL="${DATAIN_DIR}/delimited/customers_region2.csv" guiHeight="77" guiName="windows-1250" guiWidth="128" guiX="22" guiY="356" id="DATA_READER3" type="DATA_READER">
<attr name="guiDescription"><![CDATA[Read customers]]></attr>
</Node>
<Node enabled="enabled" fileURL="${DATAIN_DIR}/delimited/customers_region1.csv" guiHeight="77" guiName="ISO-8859-1" guiWidth="128" guiX="22" guiY="96" id="DATA_READER4" type="DATA_READER">
<attr name="guiDescription"><![CDATA[Read customers]]></attr>
</Node>
<Node charset="ISO-8859-1" enabled="enabled" fileURL="${DATAOUT_DIR}/customers/#.txt" guiHeight="89" guiName="partition by state" guiWidth="129" guiX="696" guiY="96" id="DATA_WRITER0" makeDirs="true" outputFieldNames="true" partitionFileTag="keyNameFileTag" partitionKey="state" type="DATA_WRITER"/>
<Node charset="windows-1250" enabled="enabled" fileURL="${DATAOUT_DIR}/delimited/customers$.txt" guiHeight="89" guiName="by records per file" guiWidth="134" guiX="696" guiY="292" id="DATA_WRITER1" partitionFileTag="numberFileTag" recordsPerFile="${FULL_FILE}" type="DATA_WRITER">
<attr name="guiDescription"><![CDATA[The number of records per file is stored in FULL_FILE parameter.]]></attr>
</Node>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/others/customers$.xml" guiHeight="89" guiName="by records per file" guiWidth="134" guiX="696" guiY="495" id="DATA_WRITER2" makeDirs="true" recordsPerFile="${FULL_FILE}" type="DATA_WRITER">
<attr name="guiDescription"><![CDATA[The number of records per file is stored in FULL_FILE parameter.]]></attr>
</Node>
<Node enabled="enabled" guiHeight="77" guiName="sorts" guiWidth="128" guiX="350" guiY="491" id="EXT_SORT0" sortKey="lastname(a)" type="EXT_SORT"/>
<Node enabled="enabled" guiHeight="65" guiName="partitions" guiWidth="128" guiX="516" guiY="491" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2
string header = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<dataset>\n";
integer counter = 0;
// Transforms input record into output record.
function integer transform() {
	string data = "";
	if (counter++ % ${FULL_FILE} == 0) {
		data = header;
	}
	data = data.concat("< customers>\n",
						"\t<customerID>", toString($customerid), "</customerID>\n",
						"\t<firstname>", $firstname, "</firstname>\n",
						"\t<lastname>", $lastname, "</lastname>\n",
						"\t<address1>", $address1, "</address1>\n",
						"\t<address2>", $address2, "</address2>\n",
						"\t<city>", $city, "</city>\n",
						"\t<state>", $state, "</state>\n",
						"\t<zip>", toString($zip), "</zip>\n",
						"\t<country>", $country, "</country>\n",
						"\t<region>", toString($region), "</region>\n",
						"\t<email>", $email, "</email>\n",
						"\t<phone>", $phone, "</phone>\n",
						"\t<creditcardtype>", toString($creditcardtype), "</creditcardtype>\n",
						"\t<creditcard>", $creditcard, "</creditcard>\n",
						"\t<creditcardexpiration>", $creditcardexpiration, "</creditcardexpiration>\n",
						"\t<username>", $username, "</username>\n",
						"\t<password>", $password, "</password>\n",
						"\t<age>", toString($age), "</age>\n",
						"\t<income>", toString($income), "</income>\n",
						"\t<gender>", $gender, "</gender>\n",
						"</customers>");
	$data = data;
	return 0;
}
// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node enabled="enabled" guiHeight="65" guiName="Reformat" guiWidth="128" guiX="350" guiY="96" id="REFORMAT1" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$0.customerid = $0.customerid;
	$0.firstname = $0.firstname;
	$0.lastname = $0.lastname;
	$0.city = $0.city;
	$0.state = $0.state;
	$0.country = $0.country;
	$0.username = $0.username;
	$0.password = $0.password;
	$0.age = $0.age;
	$0.income = $0.income;
	$0.gender = $0.gender;

	return 0;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node enabled="enabled" guiHeight="72" guiName="SimpleGather" guiWidth="128" guiX="350" guiY="292" id="SIMPLE_GATHER0" type="SIMPLE_GATHER"/>
<Edge debugMode="true" fromNode="CONCATENATE0:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge2" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="EXT_SORT0:0"/>
<Edge fromNode="DATA_READER0:0" guiBendpoints="171:467|171:509" guiLocks="171|163|null" guiRouter="Manual" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="CONCATENATE0:0"/>
<Edge fromNode="DATA_READER1:0" guiBendpoints="164:562|164:527" guiLocks="164|null|null" guiRouter="Manual" id="Edge1" inPort="Port 1 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="CONCATENATE0:1"/>
<Edge fromNode="DATA_READER2:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge4" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="SIMPLE_GATHER0:0"/>
<Edge fromNode="DATA_READER3:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge5" inPort="Port 1 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="SIMPLE_GATHER0:1"/>
<Edge fromNode="DATA_READER4:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge6" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="REFORMAT1:0"/>
<Edge fromNode="EXT_SORT0:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge12" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="REFORMAT0:0"/>
<Edge debugMode="false" fromNode="REFORMAT0:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge11" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (out)" toNode="DATA_WRITER2:0"/>
<Edge debugMode="false" fromNode="REFORMAT1:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge7" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="DATA_WRITER0:0"/>
<Edge debugMode="false" fromNode="SIMPLE_GATHER0:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge8" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="DATA_WRITER1:0"/>
</Phase>
<Phase number="1">
<Node append="true" enabled="enabled" fileURL="${DATAOUT_DIR}/others/customers$.xml" guiHeight="89" guiName=".xml completed" guiWidth="128" guiX="696" guiY="600" id="DATA_WRITER3" recordsPerFile="1" type="DATA_WRITER">
<attr name="guiDescription"><![CDATA[Add footer to the created data file]]></attr>
</Node>
<Node enabled="enabled" guiHeight="65" guiName="adds footer" guiWidth="128" guiX="516" guiY="600" id="REFORMAT2" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$0.data = "</dataset>";

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node deleteBatch="true" enabled="enabled" guiHeight="65" guiName="finds XMLs" guiWidth="128" guiX="327" guiY="637" id="SYS_EXECUTE0" interpreter="${}" type="SYS_EXECUTE">
<attr name="command"><![CDATA[find ${DATAOUT_DIR}/others -name "customers*.xml"]]></attr>
</Node>
<Edge fromNode="REFORMAT2:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge9" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (out)" toNode="DATA_WRITER3:0"/>
<Edge debugMode="false" fromNode="SYS_EXECUTE0:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge3" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (output of command)" toNode="REFORMAT2:0"/>
</Phase>
</Graph>
